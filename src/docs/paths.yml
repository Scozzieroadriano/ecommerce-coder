securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Utiliza este campo para proporcionar un token JWT de autorización.
paths:
  /api/products:
    post:
      tags:
        - Products
      summary: Creación de nuevo producto en base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyProductPost'
        required: true
      responses:
        200:
          description: Creacion exitosa del producto
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/PostProduct'
        401:
          description: Falla al crear un producto - No logeado o token invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products/ValidationTokenAndPermissions'
        500:
          description: Internal Server Error
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/Error'
    get:
      tags:
        - Products
      summary: Obtener todos los productos
      responses:
        200:
          description: Obtencion exitosa de la lista todos los productos
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/GetProducts'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/Error'
  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Obtener un producto por id
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: producto encontrado
          content: 
            apication/json:
              schema:
              $ref: '#/components/parameters/schemas/BodyProductPost'
        404:
          description: No se encontro el producto
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/ErrorGetById'
        500:
          description: Internal Server Error
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/Error'
    put:
      tags:
        - Products
      summary: Modificar un producto por id
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyProductPost'
        required: true
      responses:
        200:
          description: Producto Modificado Exitoso
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/PutProduct'
        401:
          description: Falla al crear un producto - No logeado o token invalido
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/ValidationTokenAndPermissions'
        404:
          description: No se encontro el producto
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/ErrorPutProduct'
        500:
          description: Internal Server Error
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/Error'
    delete:
      tags:
        - Products
      summary: Borrar un producto
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto que se desea borrar
          schema:
            type: string
      responses:
        200:
          description: Producto Eliminado Exitoso
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/DeleteProduct'
        404:
          description: No se encontro el producto
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/DeleteProduct'
        500:
          description: Internal Server Error
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Products/Error'
  /api/carts:
    post:
      tags:
        - Carts
      summary: Crea un nuevo carrito.      
      responses:
        200:
          description: Carrito creado con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carts/CartResponse"
        500:
          description: Internal Server Error
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
    get:
      tags:
        - Carts
      summary: Obtener todos los carritos
      responses:
        200:
          description: Obtencion exitosa de la lista todos los carritos
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/GetAll'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
  /api/carts/{id}:
    get:
      tags:
        - Carts
      summary: Obtener un carrito por id
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Obtencion exitosa de la lista todos los carritos
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/GetCartById'
        404:
          description: No se encontro el carrito
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Carts/CartNotFound'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
    delete:
      tags:
        - Carts
      summary: Borrar un carrito
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Carrito borrado con exito
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/DeleteProductInCart'
        404:
          description: No se encontro el carrito
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Carts/CartNotFound'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
  /api/carts/{id}/products/{pId}:
    post:
      tags:
        - Carts
      summary: Añadir un producto al carrito
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al carrito
          schema:
            type: string
        - in: path
          name: pId
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Obtencion exitosa de la lista todos los carritos
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/AddProductInCart'
        404:
          description: Error de autorizacion
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/ValidationTokenAndPermissions'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
    put:
      tags:
        - Carts
      summary: Modificar cantidad de producto del carrito
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al carrito
          schema:
            type: string
        - in: path
          name: pId
          required: true
          description: id referente al producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyPutQuantityInCart'
        required: true
      responses:
        200:
          description:  Cantidad de Producto Modificado
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/ModifyQuantityProductInCart'
        404:
          description: Error de autorizacion
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Products/ValidationTokenAndPermissions'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
    delete:
      tags:
        - Carts
      summary: Borrar un producto del carrito
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al carrito
          schema:
            type: string
        - in: path
          name: pId
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado del carrito
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/DeleteProductInCart'
        404:
          description: No se encontro el carrito
          content: 
            apication/json:
              schema:
                $ref: '#/components/schemas/Carts/CartNotFound'
        500:
          description: Error de servidor
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Carts/Error'
  /api/users/register:
    post:
      tags:
        - Users
      summary: Registro de usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyPostUserRegister'
        required: true
      responses:
        200:
          description: Registro exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Users/RegisterUser'
        401: 
          description: Error en validación del body
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Users/BodyError'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Users/Error'